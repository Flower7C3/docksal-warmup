#!/usr/bin/env bash

## Backup database to file
##
## Usage: fin backup-db

# Abort if anything fails
set -e

#-------------------------- Configure --------------------------------
source $(dirname ${BASH_SOURCE})/_base.sh
cd "$PROJECT_ROOT"

if [[ "" == "$RDS_HOSTNAME" ]]; then
    printf "${COLOR_RED}Please define ${COLOR_RED_BG}\$RDS_HOSTNAME${COLOR_RED} in ${COLOR_RED_BG}.docksal/docksal-local.env${COLOR_RED} file${COLOR_OFF}\n"
    exit 1
fi
if [[ "" == "$RDS_PORT" ]]; then
    printf "${COLOR_RED}Please define ${COLOR_RED_BG}\$RDS_PORT${COLOR_RED} in ${COLOR_RED_BG}.docksal/docksal-local.env${COLOR_RED} file${COLOR_OFF}\n"
    exit 2
fi
if [[ "" == "$RDS_DB_NAME" ]]; then
    printf "${COLOR_RED}Please define ${COLOR_RED_BG}\$RDS_DB_NAME${COLOR_RED} in ${COLOR_RED_BG}.docksal/docksal-local.env${COLOR_RED} file${COLOR_OFF}\n"
    exit 3
fi
if [[ "" == "$RDS_USERNAME" ]]; then
    printf "${COLOR_RED}Please define ${COLOR_RED_BG}\$RDS_USERNAME${COLOR_RED} in ${COLOR_RED_BG}.docksal/docksal-local.env${COLOR_RED} file${COLOR_OFF}\n"
    exit 4
fi
if [[ "" == "$RDS_PASSWORD" ]]; then
    printf "${COLOR_RED}Please define ${COLOR_RED_BG}\$RDS_PASSWORD${COLOR_RED} in ${COLOR_RED_BG}.docksal/docksal-local.env${COLOR_RED} file${COLOR_OFF}\n"
    exit 5
fi

#-------------------------- Execution --------------------------------
function trap_sigint() {
    printf "${COLOR_RED}Emergency stop${COLOR_OFF}\n"
    rm "$db_dump_dir_path/$db_dump_file_name"*
    exit 99
}
function err_report() {
    rm "$db_dump_dir_path/$db_dump_file_name"*
    exit 88
}
trap 'trap_sigint' SIGINT SIGQUIT

printf "${COLOR_YELLOW}Backup from ${COLOR_YELLOW_H}%s${COLOR_OFF}${COLOR_YELLOW} to ${COLOR_YELLOW_H}%s${COLOR_OFF}${COLOR_YELLOW} file${COLOR_OFF}\n" "${RDS_USERNAME}@${RDS_HOSTNAME}:${RDS_PORT}" "$db_dump_sql_file_name"
mkdir -p ${db_dump_dir_path}

ignores=$(fin exec -T --in=db mysql --disable-column-names --host "$RDS_HOSTNAME" --port "$RDS_PORT" --user "$RDS_USERNAME" --password="$RDS_PASSWORD" -e "SELECT GROUP_CONCAT(concat('--ignore-table=', TABLE_SCHEMA, '.', table_name) SEPARATOR ' ') FROM information_schema.tables WHERE TABLE_SCHEMA = '${RDS_DB_NAME}' AND TABLE_NAME LIKE 'view_%';")
ignores=$(echo $ignores | sed 's/NULL//g; s/|NULL|/||/g; s/|NULL\(|\|$\)/|\1/g')

fin exec -T --in=db mysqldump --verbose --host "$RDS_HOSTNAME" --port "$RDS_PORT" --user "$RDS_USERNAME" --password="$RDS_PASSWORD" $ignores "$RDS_DB_NAME" >"$db_dump_dir_path/$db_dump_sql_file_name" || err_report
